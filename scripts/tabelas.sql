CREATE TABLE proposicao (
    ID INTEGER IDENTITY(1,1) PRIMARY KEY ,
    AUTOR NVARCHAR(300),
    DATA_PRESENTACAO DATETIME,
    EMENTA NVARCHAR(MAX),
    REGIME VARCHAR(50),
    SITUACCAO VARCHAR(80),
    TIPO_PROPOSICAO VARCHAR(100),
    NUMERO VARCHAR(40) UNIQUE,
    ANO INTEGER,
    CIDADE VARCHAR(60),
    ESTADO VARCHAR(80),
    DATA_INSERSAO_REGISTRO DATETIME DEFAULT GETDATE(),
    DATA_ATUALIZACAO_REGISTRO DATETIME
);

DELETE 
FROM tramitacao
where ID_PROPOSICAO = '11063'


DELETE
FROM proposicao
WHERE NUMERO = '11063'

SELECT *
FROM tramitacao
where ID_PROPOSICAO = '11063'

SELECT * 
FROM proposicao
WHERE NUMERO = '11063'
order by DATA_INSERSAO_REGISTRO desc;
SELECT *
FROM tramitacao

SELECT ID as ID
                    FROM proposicao
                    where numero = '1111'

TRUNCATE table proposicao


DROP TABLE proposicao CASCADE;

DELETE 
FROM proposicao;

CREATE TABLE tramitacao(
    ID INTEGER IDENTITY(1,1) PRIMARY KEY,
    DESCRICAO VARCHAR(MAX),
    LOCAL_PROPOSICAO VARCHAR(60),
    ID_PROPOSICAO VARCHAR(40),
    DATA_CRIACAO_TRAMITACAO DATETIME ,
    DATA_CRIACAO_REGISTRO DATETIME DEFAULT GETDATE() ,
    DATA_ATUALIZACAO_REGISTRO DATETIME ,
    FOREIGN KEY (ID_PROPOSICAO) REFERENCES proposicao(NUMERO)
 
);

SELECT *
FROM tramitacao

DROP TABLE tramitacao;

===== LOGS =======================

DROP TABLE log_dag;


SELECT *
FROM log_dag


ALTER TABLE log_dag
DROP COLUMN TIPO_ERROR

-- Info de log ERRO, SUCESS, INFO
CREATE TABLE log_dag(
    ID INTEGER IDENTITY(1, 1) PRIMARY KEY ,
    TIPO_ERROR INTEGER,
    TIPO_LOG VARCHAR(20),
    URL_API VARCHAR(MAX),
    MENSAGEM_LOG VARCHAR(300) ,
    JSON_XML VARCHAR(MAX),
    JSON_ENVIO VARCHAR(MAX),
    DATA_REGISTRO DATETIME DEFAULT GETDATE()


);

-- Registo de erro

DELETE
FROM dag_error;


ALTER TABLE dag_error
DROP COLUMN TIPO_ERROR

CREATE TABLE dag_error (
    ID INTEGER IDENTITY(1, 1) PRIMARY KEY ,
    TIPO_ERROR INTEGER,
    NUMERO VARCHAR(40),
    URL_API VARCHAR(MAX),
    JSON_XML VARCHAR(MAX),
    JSON_ENVIO VARCHAR(MAX),
    MENSAGEM_ERRO VARCHAR(300),
    DATA_REGISTRO DATETIME DEFAULT GETDATE(),
    DATA_ATUALIZACAO DATETIME
)

DROP TABLE dag_error;

SELECT *
FROM dag_error

DELETE FROM DAG_ERROR

order by DATA_REGISTRO DESC;


DROP TABLE dag_error;
INSERT INTO dag_error (NUMERO, JSON_XML, MENSAGEM_ERRO, DATA_ATUALIZACAO)
VALUES('1', 'TESTE', 'TESTE', GETDATE())

BEGIN
    DECLARE @NUMERO VARCHAR(10), @NUMERO_ERROR VARCHAR(10);

    SET @NUMERO = '1';

  
    SELECT @NUMERO_ERROR = NUMERO
    FROM dag_error
    WHERE NUMERO = @NUMERO;

    
    IF @NUMERO_ERROR IS NULL
        PRINT 1 + @NUMERO_ERROR;
    else

        PRINT '2 '+ @NUMERO_ERROR;
END;


SELECT * 
FROM  LOG_DAG

order by DATA_REGISTRO desc;


DELETE FROM log_dag;
DROP TABLE log_dag;

SELECT 
    name AS NomeDoIndice, 
    type_desc AS TipoDoIndice, 
    is_unique AS IndiceUnico
FROM sys.indexes
WHERE object_id = OBJECT_ID('Clientes');



BEGIN
    DECLARE @numero_teste INTEGER
    set @numero_teste = 1

    PRINT @numero_teste
END


-- Update rows in table '[TableName]' in schema '[dbo]'
UPDATE [proposicao]
SET
    [ColumnName1] = ColumnValue1,
    [ColumnName2] = ColumnValue2
    -- Add more columns and values here
WHERE /* add search conditions here */
GO